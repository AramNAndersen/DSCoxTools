% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GlmnetCoxTools.R
\name{Cox_forecasting_glmnet_CVA}
\alias{Cox_forecasting_glmnet_CVA}
\title{Cox forecasting glmnet with alpha cross-validation}
\usage{
Cox_forecasting_glmnet_CVA(
  X_data,
  y_data,
  alpha = 0,
  lambda = c(exp(seq(-4, 6, 0.1))),
  free_cores = 2,
  test.n = c(6, 4),
  nfolds = nrow(y.train.red),
  iter = 200,
  log_AUC = c(1:2),
  Patient.Z = c(1:2),
  Drug.Z = c(1:2),
  RCPC = c(0, 1, 2, 3, 4)
)
}
\arguments{
\item{X_data}{Input drug screen data}

\item{y_data}{Survival data}

\item{alpha}{Penalty type. 0 for L2 (Ridge), 1 for L1 (Lasso), or any number between 0 and 1 for elastic net penalty. Set "CVA" for automatic selection of optimal penalty type.}

\item{lambda}{Vector of regularization penalties.}

\item{free_cores}{Number of free cores.}

\item{test.n}{Vector of test set balance. First integer is the number of survivals, and second integer is the number of deaths.}

\item{nfolds}{Cross-validation fold.}

\item{iter}{Number of test iterations.}

\item{log_AUC}{log2 transform of AUC. 1 for yes, 2 for no, or c(1,2) for both.}

\item{Patient.Z}{Patient-wise standardization. 1 for yes, 2 for no, or c(1,2) for both.}

\item{Drug.Z}{Drug-wise standardization. 1 for yes, 2 for no, or c(1,2) for both.}

\item{RCPC}{Removal of confounding principal components.}
}
\value{
A list containing results from cross-validation alpha optimization and C-index test results
}
\description{
C-index testing of Cox partial likelihood glmnet models for survival forecasting from ex vivo drug screens. With CVA.
}
\author{
Aram N. Andersen \email{aram.n.andersen@gmail.com}
}
